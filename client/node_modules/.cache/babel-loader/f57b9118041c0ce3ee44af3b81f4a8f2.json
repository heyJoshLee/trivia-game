{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/triva-game/client/src/components/InputField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport jQuery from 'jquery';\nimport { fetchQuestion, setAnswer } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputField = props => {\n  _s();\n\n  const [answer, setAnswerField] = useState();\n\n  const handleChange = event => {\n    setAnswerField(event.target.value);\n    props.setAnswer(answer);\n  };\n\n  const showAnswerContainer = () => {\n    const container = jQuery(\"#answer-container\");\n    container.show(\"slow\", () => {\n      container.delay(5000).hide(\"slow\", () => {\n        props.fetchQuestion();\n      });\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    showAnswerContainer();\n    setAnswerField(\"\");\n  };\n\n  const answeredCorrectly = () => {\n    return answer.toLowerCase === props.question[0].answer.toLowerCase;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      autoComplete: \"off\",\n      onChange: handleChange,\n      value: answer,\n      name: \"answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputField, \"sXt7iPCUE0MjQi92TaKJ1UKgS9A=\");\n\n_c = InputField;\n\nconst matpStateToProps = state => {\n  return {\n    question: state.question\n  };\n};\n\nexport default connect(matpStateToProps, {\n  fetchQuestion,\n  setAnswer\n})(InputField);\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/mymac/repos/triva-game/client/src/components/InputField.js"],"names":["React","useState","connect","jQuery","fetchQuestion","setAnswer","InputField","props","answer","setAnswerField","handleChange","event","target","value","showAnswerContainer","container","show","delay","hide","handleSubmit","preventDefault","answeredCorrectly","toLowerCase","question","matpStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,kBAAzC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,MAAD,EAASC,cAAT,IAA2BR,QAAQ,EAAzC;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAN,IAAAA,KAAK,CAACF,SAAN,CAAgBG,MAAhB;AACD,GAHD;;AAKA,QAAMM,mBAAmB,GAAG,MAAM;AAChC,UAAMC,SAAS,GAAGZ,MAAM,CAAC,mBAAD,CAAxB;AACAY,IAAAA,SAAS,CAACC,IAAV,CAAe,MAAf,EAAuB,MAAM;AAC3BD,MAAAA,SAAS,CAACE,KAAV,CAAgB,IAAhB,EAAsBC,IAAtB,CAA2B,MAA3B,EAAmC,MAAM;AACvCX,QAAAA,KAAK,CAACH,aAAN;AACD,OAFD;AAGD,KAJD;AAKD,GAPD;;AASA,QAAMe,YAAY,GAAIR,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACS,cAAN;AACAN,IAAAA,mBAAmB;AACnBL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAJD;;AAMA,QAAMY,iBAAiB,GAAG,MAAM;AAC9B,WAAOb,MAAM,CAACc,WAAP,KAAuBf,KAAK,CAACgB,QAAN,CAAe,CAAf,EAAkBf,MAAlB,CAAyBc,WAAvD;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA,2BACE;AAAO,MAAA,YAAY,EAAC,KAApB;AAA0B,MAAA,QAAQ,EAAET,YAApC;AAAkD,MAAA,KAAK,EAAEF,MAAzD;AAAiE,MAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCD;;GAAMF,U;;KAAAA,U;;AAmCN,MAAMkB,gBAAgB,GAAGC,KAAK,IAAI;AAChC,SAAO;AACLF,IAAAA,QAAQ,EAAEE,KAAK,CAACF;AADX,GAAP;AAGD,CAJD;;AAMA,eAAerB,OAAO,CAACsB,gBAAD,EAAmB;AACvCpB,EAAAA,aADuC;AAEvCC,EAAAA;AAFuC,CAAnB,CAAP,CAGZC,UAHY,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport jQuery from 'jquery';\nimport { fetchQuestion, setAnswer } from '../actions/index';\n\nconst InputField = (props) => {\n\n  const [answer, setAnswerField] = useState();\n\n  const handleChange = (event) => {\n    setAnswerField(event.target.value)\n    props.setAnswer(answer);\n  }\n\n  const showAnswerContainer = () => {\n    const container = jQuery(\"#answer-container\");\n    container.show(\"slow\", () => {\n      container.delay(5000).hide(\"slow\", () => {\n        props.fetchQuestion();\n      });\n    });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    showAnswerContainer();\n    setAnswerField(\"\");\n  }\n\n  const answeredCorrectly = () => {\n    return answer.toLowerCase === props.question[0].answer.toLowerCase;\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input autoComplete=\"off\" onChange={handleChange} value={answer} name=\"answer\"></input>\n    </form>\n  )\n}\n\nconst matpStateToProps = state => {\n  return {\n    question: state.question\n  }\n}\n\nexport default connect(matpStateToProps, {\n  fetchQuestion,\n  setAnswer\n})(InputField);"]},"metadata":{},"sourceType":"module"}