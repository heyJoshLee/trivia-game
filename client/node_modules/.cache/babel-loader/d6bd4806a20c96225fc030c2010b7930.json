{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/triva-game/client/src/components/TimeBar.js\";\nimport React from 'react';\nimport jQuery from 'jquery';\nimport { connect } from 'react-redux';\nimport { startTimer, stopTimer } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeBar = props => {\n  const reduceBar = () => {\n    let $bar = jQuery(\"#inside\");\n    width -= 1;\n\n    if (width === 70) {\n      $bar.css(\"background-color\", \"orange\");\n    } else if (width === 40) {\n      $bar.css(\"background-color\", \"red\");\n    }\n\n    let widthPercent = width + \"%\";\n    $bar.width(widthPercent);\n  };\n\n  if (props.timerRunning) {\n    let startInterval = setInterval(reduceBar, 200);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"progress-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"inside\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.startTimer,\n      children: \"Start Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TimeBar;\n\nconst mapStateToProps = state => {\n  return {\n    timerRunning: state.timerRunning\n  };\n};\n\nexport default connect(mapStateToProps, {\n  startTimer,\n  stopTimer\n})(TimeBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeBar\");","map":{"version":3,"sources":["/Users/mymac/repos/triva-game/client/src/components/TimeBar.js"],"names":["React","jQuery","connect","startTimer","stopTimer","TimeBar","props","reduceBar","$bar","width","css","widthPercent","timerRunning","startInterval","setInterval","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIC,IAAI,GAAGP,MAAM,CAAC,SAAD,CAAjB;AACAQ,IAAAA,KAAK,IAAI,CAAT;;AACA,QAAIA,KAAK,KAAK,EAAd,EAAkB;AAChBD,MAAAA,IAAI,CAACE,GAAL,CAAS,kBAAT,EAA6B,QAA7B;AACD,KAFD,MAEO,IAAID,KAAK,KAAK,EAAd,EAAkB;AACvBD,MAAAA,IAAI,CAACE,GAAL,CAAS,kBAAT,EAA6B,KAA7B;AACD;;AACD,QAAIC,YAAY,GAAGF,KAAK,GAAG,GAA3B;AACAD,IAAAA,IAAI,CAACC,KAAL,CAAWE,YAAX;AACD,GAVD;;AAYA,MAAIL,KAAK,CAACM,YAAV,EAAwB;AACtB,QAAIC,aAAa,GAAGC,WAAW,CAACP,SAAD,EAAY,GAAZ,CAA/B;AACD;;AAGD,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAED,KAAK,CAACH,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzBD;;KAAME,O;;AA2BN,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLJ,IAAAA,YAAY,EAAEI,KAAK,CAACJ;AADf,GAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CAACa,eAAD,EAAkB;AACtCZ,EAAAA,UADsC;AAEtCC,EAAAA;AAFsC,CAAlB,CAAP,CAGZC,OAHY,CAAf","sourcesContent":["import React from 'react';\nimport jQuery from 'jquery';\nimport { connect } from 'react-redux';\nimport { startTimer, stopTimer } from '../actions/index'\n\n\nconst TimeBar = (props) => {\n    \n  const reduceBar = () => {\n    let $bar = jQuery(\"#inside\");\n    width -= 1;\n    if (width === 70) {\n      $bar.css(\"background-color\", \"orange\")\n    } else if (width === 40) {\n      $bar.css(\"background-color\", \"red\")\n    } \n    let widthPercent = width + \"%\";\n    $bar.width(widthPercent);\n  }\n\n  if (props.timerRunning) {\n    let startInterval = setInterval(reduceBar, 200)\n  }\n\n\n  return (\n    <div id=\"progress-bar\">\n      <div id=\"inside\"></div> \n      <button onClick={props.startTimer}>Start Timer</button>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    timerRunning: state.timerRunning\n  }\n}\n\nexport default connect(mapStateToProps, {\n  startTimer,\n  stopTimer\n})(TimeBar);"]},"metadata":{},"sourceType":"module"}