{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/triva-game/client/src/components/AnswerBoxes.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnswerBoxes = props => {\n  const renderAnswers = () => {\n    if (!props.question) {\n      console.log(\"No question\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    } else {\n      let choices = props.question.results[0].incorrect_answers;\n      let correct_answer = props.question.results[0].correct_answer;\n      choices.push(correct_answer);\n      console.log(\"CHOICES\");\n      console.log(choices);\n      return props.question.results[0].incorrect_answers.map(choice => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderAnswers()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AnswerBoxes;\n\nconst mapStateToProps = state => {\n  return {\n    question: state.question\n  };\n};\n\nexport default connect(mapStateToProps)(AnswerBoxes);\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerBoxes\");","map":{"version":3,"sources":["/Users/mymac/repos/triva-game/client/src/components/AnswerBoxes.js"],"names":["React","connect","AnswerBoxes","props","renderAnswers","question","console","log","choices","results","incorrect_answers","correct_answer","push","map","choice","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE7B,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAI,CAACD,KAAK,CAACE,QAAX,EAAqB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHD,MAGO;AACL,UAAIC,OAAO,GAAGL,KAAK,CAACE,QAAN,CAAeI,OAAf,CAAuB,CAAvB,EAA0BC,iBAAxC;AACA,UAAIC,cAAc,GAAGR,KAAK,CAACE,QAAN,CAAeI,OAAf,CAAuB,CAAvB,EAA0BE,cAA/C;AACAH,MAAAA,OAAO,CAACI,IAAR,CAAaD,cAAb;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,aAAOL,KAAK,CAACE,QAAN,CAAeI,OAAf,CAAuB,CAAvB,EAA0BC,iBAA1B,CAA4CG,GAA5C,CAAgDC,MAAM,IAAI;AAC/D,4BAAO;AAAA,oBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFM,CAAP;AAGD;AACF,GAdD;;AAeA,sBACE;AAAA,cACGV,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;KAAMF,W;;AAwBN,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,QAAQ,EAAEW,KAAK,CAACX;AADX,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACc,eAAD,CAAP,CAAyBb,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\n\nconst AnswerBoxes = (props) => {\n\n  const renderAnswers = () => {\n    if (!props.question) {\n      console.log(\"No question\")\n      return <div></div>\n    } else {\n      let choices = props.question.results[0].incorrect_answers;\n      let correct_answer = props.question.results[0].correct_answer;\n      choices.push(correct_answer);\n      console.log(\"CHOICES\")\n      console.log(choices)\n      return props.question.results[0].incorrect_answers.map(choice => {\n        return <div>{choice}</div>\n      })\n    }\n  }\n  return (\n    <div>\n      {renderAnswers()}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    question: state.question\n  }\n}\n\nexport default connect(mapStateToProps)(AnswerBoxes);"]},"metadata":{},"sourceType":"module"}