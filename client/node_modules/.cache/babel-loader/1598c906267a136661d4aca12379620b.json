{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst questionReducer = (question = null, action) => {\n  switch (action.type) {\n    case \"FETCH_QUESTION\":\n      return action.payload;\n\n    default:\n      return question;\n  }\n\n  ;\n};\n\nconst answerReducer = (answer = null, action) => {\n  switch (action.type) {\n    case \"SET_ANSWER\":\n      return action.payload;\n\n    case \"FETCH_QUESTION\":\n      {\n        return null;\n      }\n\n    default:\n      return answer;\n  }\n};\n\nconst timerRunningReducer = (running = false, action) => {\n  switch (action.type) {\n    case \"START_TIMER\":\n      return action.payload;\n\n    case \"STOP_TIMER\":\n      return action.payload;\n\n    case \"FETCH_QUESTION\":\n      return true;\n\n    default:\n      return running;\n  }\n};\n\nconst avaiblePoints = (points = 0, action) => {\n  switch (action.type) {\n    case \"CALC_AVAIL_POINTS\":\n      return action.payload;\n\n    default:\n      return points;\n  }\n};\n\nexport default combineReducers({\n  question: questionReducer,\n  answer: answerReducer,\n  timerRunning: timerRunningReducer\n});","map":{"version":3,"sources":["/Users/mymac/repos/triva-game/client/src/reducers/index.js"],"names":["combineReducers","questionReducer","question","action","type","payload","answerReducer","answer","timerRunningReducer","running","avaiblePoints","points","timerRunning"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,eAAe,GAAG,CAACC,QAAQ,GAAG,IAAZ,EAAkBC,MAAlB,KAA6B;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,QAAP;AAJJ;;AAKC;AACF,CAPD;;AASA,MAAMI,aAAa,GAAG,CAACC,MAAM,GAAG,IAAV,EAAgBJ,MAAhB,KAA2B;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF,SAAK,gBAAL;AAAuB;AACrB,eAAO,IAAP;AACD;;AACD;AACE,aAAOE,MAAP;AAPJ;AASD,CAVD;;AAYA,MAAMC,mBAAmB,GAAG,CAACC,OAAO,GAAG,KAAX,EAAkBN,MAAlB,KAA6B;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF,SAAK,YAAL;AACE,aAAOF,MAAM,CAACE,OAAd;;AACF,SAAK,gBAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOI,OAAP;AARJ;AAUD,CAXD;;AAaA,MAAMC,aAAa,GAAG,CAACC,MAAM,GAAG,CAAV,EAAaR,MAAb,KAAwB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,mBAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOM,MAAP;AAJJ;AAMD,CAPD;;AASA,eAAeX,eAAe,CAAC;AAC7BE,EAAAA,QAAQ,EAAED,eADmB;AAE7BM,EAAAA,MAAM,EAAED,aAFqB;AAG7BM,EAAAA,YAAY,EAAEJ;AAHe,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nconst questionReducer = (question = null, action) => {\n  switch (action.type) {\n    case \"FETCH_QUESTION\":\n      return action.payload;\n    default: \n      return question;\n  };\n};\n\nconst answerReducer = (answer = null, action) => {\n  switch (action.type) {\n    case \"SET_ANSWER\":\n      return action.payload;\n    case \"FETCH_QUESTION\": {\n      return null;\n    }\n    default:\n      return answer;\n  }\n}\n\nconst timerRunningReducer = (running = false, action) => {\n  switch (action.type) {\n    case \"START_TIMER\":\n      return action.payload;\n    case \"STOP_TIMER\":\n      return action.payload;\n    case \"FETCH_QUESTION\":\n      return true;\n    default:\n      return running;\n  }\n}\n\nconst avaiblePoints = (points = 0, action) => {\n  switch(action.type) {\n    case \"CALC_AVAIL_POINTS\":\n      return action.payload;\n    default:\n      return points;\n  }\n}\n\nexport default combineReducers({\n  question: questionReducer,\n  answer: answerReducer,\n  timerRunning: timerRunningReducer\n});"]},"metadata":{},"sourceType":"module"}