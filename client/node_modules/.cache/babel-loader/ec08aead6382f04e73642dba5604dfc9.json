{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/triva-game/client/src/components/TimeBar.js\";\nimport React from 'react';\nimport jQuery from 'jquery';\nimport { connect } from 'react-redux';\nimport { startTimer, stopTimer } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeBar = props => {\n  let width;\n  let startInterval;\n  let points = 1000;\n\n  const reduceBar = () => {\n    let $bar = jQuery(\"#inside\");\n    width -= 1;\n    points -= 10;\n\n    if (points <= 0) {\n      points = 0;\n    }\n\n    if (width === 70) {\n      $bar.css(\"background-color\", \"orange\");\n    } else if (width === 40) {\n      $bar.css(\"background-color\", \"red\");\n    }\n\n    let widthPercent = width + \"%\";\n    $bar.width(widthPercent);\n  };\n\n  const startTimerLocal = () => {\n    width = 100;\n    props.startTimer();\n    startInterval = setInterval(reduceBar, 200);\n  };\n\n  const stopTimerLocal = () => {\n    clearInterval(startInterval);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"progress-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"inside\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTimerLocal,\n      children: \"Start Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopTimerLocal,\n      children: \"Stop Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TimeBar;\n\nconst mapStateToProps = state => {\n  return {\n    timerRunning: state.timerRunning\n  };\n};\n\nexport default connect(mapStateToProps, {\n  startTimer,\n  stopTimer\n})(TimeBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeBar\");","map":{"version":3,"sources":["/Users/mymac/repos/triva-game/client/src/components/TimeBar.js"],"names":["React","jQuery","connect","startTimer","stopTimer","TimeBar","props","width","startInterval","points","reduceBar","$bar","css","widthPercent","startTimerLocal","setInterval","stopTimerLocal","clearInterval","mapStateToProps","state","timerRunning"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,MAAIC,KAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,MAAM,GAAG,IAAb;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIC,IAAI,GAAGV,MAAM,CAAC,SAAD,CAAjB;AACAM,IAAAA,KAAK,IAAI,CAAT;AACAE,IAAAA,MAAM,IAAI,EAAV;;AACA,QAAIA,MAAM,IAAI,CAAd,EAAiB;AACfA,MAAAA,MAAM,GAAG,CAAT;AACD;;AACD,QAAIF,KAAK,KAAK,EAAd,EAAkB;AAChBI,MAAAA,IAAI,CAACC,GAAL,CAAS,kBAAT,EAA6B,QAA7B;AACD,KAFD,MAEO,IAAIL,KAAK,KAAK,EAAd,EAAkB;AACvBI,MAAAA,IAAI,CAACC,GAAL,CAAS,kBAAT,EAA6B,KAA7B;AACD;;AACD,QAAIC,YAAY,GAAGN,KAAK,GAAG,GAA3B;AACAI,IAAAA,IAAI,CAACJ,KAAL,CAAWM,YAAX;AACD,GAdD;;AAoBA,QAAMC,eAAe,GAAG,MAAM;AAC5BP,IAAAA,KAAK,GAAG,GAAR;AACAD,IAAAA,KAAK,CAACH,UAAN;AACAK,IAAAA,aAAa,GAAGO,WAAW,CAACL,SAAD,EAAY,GAAZ,CAA3B;AACD,GAJD;;AAMA,QAAMM,cAAc,GAAG,MAAM;AAC3BC,IAAAA,aAAa,CAACT,aAAD,CAAb;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEM,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5CD;;KAAMX,O;;AA8CN,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,YAAY,EAAED,KAAK,CAACC;AADf,GAAP;AAGD,CAJD;;AAMA,eAAelB,OAAO,CAACgB,eAAD,EAAkB;AACtCf,EAAAA,UADsC;AAEtCC,EAAAA;AAFsC,CAAlB,CAAP,CAGZC,OAHY,CAAf","sourcesContent":["import React from 'react';\nimport jQuery from 'jquery';\nimport { connect } from 'react-redux';\nimport { startTimer, stopTimer } from '../actions/index'\n\n\nconst TimeBar = (props) => {\n    \n  let width;\n  let startInterval;\n  let points = 1000;\n\n  const reduceBar = () => {\n    let $bar = jQuery(\"#inside\");\n    width -= 1;\n    points -= 10\n    if (points <= 0) {\n      points = 0;\n    }\n    if (width === 70) {\n      $bar.css(\"background-color\", \"orange\")\n    } else if (width === 40) {\n      $bar.css(\"background-color\", \"red\")\n    } \n    let widthPercent = width + \"%\";\n    $bar.width(widthPercent);\n  }\n\n  \n\n \n\n  const startTimerLocal = () => {\n    width = 100;\n    props.startTimer();\n    startInterval = setInterval(reduceBar, 200)\n  }\n\n  const stopTimerLocal = () => {\n    clearInterval(startInterval);\n  }\n\n\n  return (\n    <div id=\"progress-bar\">\n      <div id=\"inside\"></div> \n      <button onClick={startTimerLocal}>Start Timer</button>\n      <button onClick={stopTimerLocal}>Stop Timer</button>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    timerRunning: state.timerRunning\n  }\n}\n\nexport default connect(mapStateToProps, {\n  startTimer,\n  stopTimer\n})(TimeBar);"]},"metadata":{},"sourceType":"module"}