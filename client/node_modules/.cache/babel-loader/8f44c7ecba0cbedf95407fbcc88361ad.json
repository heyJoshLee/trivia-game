{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/triva-game/client/src/components/TimeBar.js\";\nimport React from 'react';\nimport jQuery from 'jquery';\nimport { connect } from 'react-redux';\nimport { startTimer, setAnswer, stopTimer } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TimeBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.width = 100;\n    this.startInterval = null;\n    this.points = 100;\n  }\n\n  componentDidMount() {\n    if (this.props.timerRunning) {\n      this.startTimerLocal();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.timerRunning) {\n      this.startTimerLocal();\n    } else {\n      this.stopTimerLocal();\n    }\n  }\n\n  reduceBar() {\n    let $bar = jQuery(\"#inside\");\n    this.width -= 1;\n\n    if (this.width === 70) {\n      $bar.css(\"background-color\", \"orange\");\n    } else if (this.width === 40) {\n      $bar.css(\"background-color\", \"red\");\n    }\n\n    let widthPercent = this.width + \"%\";\n    $bar.width(widthPercent);\n\n    if (this.width <= 0) {\n      this.timeUp();\n    }\n  }\n\n  timeUp() {\n    this.props.setAnswer(\"NO ANSWER\");\n  }\n\n  startTimerLocal() {\n    jQuery(\"#inside\").css(\"background-color\", \"green\");\n    this.width = 100;\n    this.props.startTimer();\n    this.startInterval = setInterval(this.reduceBar.bind(this), 200);\n  }\n\n  stopTimerLocal() {\n    clearInterval(this.startInterval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inside\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    timerRunning: state.timerRunning\n  };\n};\n\nexport default connect(mapStateToProps, {\n  startTimer,\n  stopTimer,\n  setAnswer\n})(TimeBar);","map":{"version":3,"sources":["/Users/mymac/repos/triva-game/client/src/components/TimeBar.js"],"names":["React","jQuery","connect","startTimer","setAnswer","stopTimer","TimeBar","Component","width","startInterval","points","componentDidMount","props","timerRunning","startTimerLocal","componentDidUpdate","stopTimerLocal","reduceBar","$bar","css","widthPercent","timeUp","setInterval","bind","clearInterval","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,SAAhC,QAAiD,kBAAjD;;;AAGA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B,GAF4B;AAAA,SAGpCC,aAHoC,GAGpB,IAHoB;AAAA,SAIpCC,MAJoC,GAI1B,GAJ0B;AAAA;;AAMpCC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,KAAL,CAAWC,YAAf,EAA6B;AAC3B,WAAKC,eAAL;AACD;AACF;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKH,KAAL,CAAWC,YAAf,EAA6B;AAC3B,WAAKC,eAAL;AACD,KAFD,MAEO;AACL,WAAKE,cAAL;AACD;AACF;;AAEDC,EAAAA,SAAS,GAAG;AACV,QAAIC,IAAI,GAAGjB,MAAM,CAAC,SAAD,CAAjB;AACA,SAAKO,KAAL,IAAc,CAAd;;AACA,QAAI,KAAKA,KAAL,KAAe,EAAnB,EAAuB;AACrBU,MAAAA,IAAI,CAACC,GAAL,CAAS,kBAAT,EAA6B,QAA7B;AACD,KAFD,MAEO,IAAI,KAAKX,KAAL,KAAe,EAAnB,EAAuB;AAC5BU,MAAAA,IAAI,CAACC,GAAL,CAAS,kBAAT,EAA6B,KAA7B;AACD;;AACD,QAAIC,YAAY,GAAG,KAAKZ,KAAL,GAAa,GAAhC;AACAU,IAAAA,IAAI,CAACV,KAAL,CAAWY,YAAX;;AACA,QAAI,KAAKZ,KAAL,IAAc,CAAlB,EAAqB;AACnB,WAAKa,MAAL;AACD;AACF;;AAEDA,EAAAA,MAAM,GAAG;AACP,SAAKT,KAAL,CAAWR,SAAX,CAAqB,WAArB;AACD;;AAGDU,EAAAA,eAAe,GAAG;AAChBb,IAAAA,MAAM,CAAC,SAAD,CAAN,CAAkBkB,GAAlB,CAAsB,kBAAtB,EAA0C,OAA1C;AACA,SAAKX,KAAL,GAAa,GAAb;AACA,SAAKI,KAAL,CAAWT,UAAX;AACA,SAAKM,aAAL,GAAqBa,WAAW,CAAC,KAAKL,SAAL,CAAeM,IAAf,CAAoB,IAApB,CAAD,EAA4B,GAA5B,CAAhC;AACD;;AAEDP,EAAAA,cAAc,GAAG;AACfQ,IAAAA,aAAa,CAAC,KAAKf,aAAN,CAAb;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAzDmC;;AA6DtC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLd,IAAAA,YAAY,EAAEc,KAAK,CAACd;AADf,GAAP;AAGD,CAJD;;AAMA,eAAeX,OAAO,CAACwB,eAAD,EAAkB;AACtCvB,EAAAA,UADsC;AAEtCE,EAAAA,SAFsC;AAGtCD,EAAAA;AAHsC,CAAlB,CAAP,CAIZE,OAJY,CAAf","sourcesContent":["import React from 'react';\nimport jQuery from 'jquery';\nimport { connect } from 'react-redux';\nimport { startTimer, setAnswer, stopTimer } from '../actions/index'\n\n\nclass TimeBar extends React.Component {\n    \n  width = 100;\n  startInterval = null;\n  points =  100;\n\n  componentDidMount() {\n    if (this.props.timerRunning) {\n      this.startTimerLocal();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.timerRunning) {\n      this.startTimerLocal();\n    } else {\n      this.stopTimerLocal();\n    }\n  }\n\n  reduceBar() {\n    let $bar = jQuery(\"#inside\");\n    this.width -= 1;\n    if (this.width === 70) {\n      $bar.css(\"background-color\", \"orange\")\n    } else if (this.width === 40) {\n      $bar.css(\"background-color\", \"red\")\n    } \n    let widthPercent = this.width + \"%\";\n    $bar.width(widthPercent);\n    if (this.width <= 0) {\n      this.timeUp();\n    }\n  }\n\n  timeUp() {\n    this.props.setAnswer(\"NO ANSWER\");\n  }\n \n\n  startTimerLocal() {\n    jQuery(\"#inside\").css(\"background-color\", \"green\");\n    this.width = 100;\n    this.props.startTimer();\n    this.startInterval = setInterval(this.reduceBar.bind(this), 200)\n  }\n\n  stopTimerLocal() {\n    clearInterval(this.startInterval);\n  }\n\n  render() {\n    return (\n      <div id=\"progress-bar\">\n        <div id=\"inside\"></div> \n      </div>\n    )\n  }\n \n}\n\nconst mapStateToProps = state => {\n  return {\n    timerRunning: state.timerRunning\n  }\n}\n\nexport default connect(mapStateToProps, {\n  startTimer,\n  stopTimer,\n  setAnswer\n})(TimeBar);"]},"metadata":{},"sourceType":"module"}